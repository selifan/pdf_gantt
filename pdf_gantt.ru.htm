<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<title>Класс вывода графиков Ганта в PDF документ</title>
<meta http-equiv="content-type" content="text/html; charset=windows-1251">
<link rel="stylesheet" type="text/css" href="helpstyles.css">
</head>
<body>
<!-- DOC BEGIN -->

<h3>Класс PdfGantt для вывода диаграмм Ганта в PDF документе</h3>

Класс PdfGantt является "оберткой" (wrapper) над классом TCPDF и предназначен
для печати <a href="http://ru.wikipedia.org/wiki/%D0%94%D0%B8%D0%B0%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B0_%D0%93%D0%B0%D0%BD%D1%82%D0%B0">графиков (диаграмм) Ганта</a> в PDF-документах.
<br><br>Класс имеет следующие возможности.
<ul>
  <li>автоматическое определение граничных дат графика, если они не указаны явно</li>
  <li>поддержка зависимостей между задачами, автоматическая подстройка (сдвиг вправо) дат старта у "подчиненных" задач</li>
  <li>вывод "вех" между этапами (milestones) (в случае если они указаны у одной и более задач)</li>
  <li>цветовое и числовое отображение процента выполнения задачи (если он был передан в данных)</li>
  <li>пользовательская настройка цветов фона, линий координатной сетки, теней, надписей с названиями задач и работающих над ними "членов команды",
  размеров шрифтов
  </li>
  <li>вывод графика частями (для последующей склейки твердых копий в "панорамный снимок")</li>
</ul>

<div style="text-align:center">
<img src="gantt.png" />
</div>

<h4>Установка</h4>

Скопируйте файл <b>pdf_gantt.php</b>  в одну из папок, перечисленных в include_path
 (либо в своих кодах всегда указывайте полный путь к нему в операторах include/require).
 Так как данный модуль для работы требует наличия классов TCPDF, также необходимо их наличие.
 Ссылка: <a href="http://tcpdf.org" target="_blank">tcpdf.org</a>

<h4>Использование класса</h4>
Класс может использоваться как самостоятельный для вывода диаграмм непосредственно в объект класса
TCPDF, так и в качестве плагина к модулю генерации PDF-документов с данными пользователя -
<a href="http://www.phpclasses.org/package/7791" target="_blank">CPrintFormPdf</a>.

<h5>Использование как самостоятельного класса (PdfGantt)</h5>

Для самостоятельных вызовов применяется основной класс PdfGantt.

<br><br>Пример.<br>
<pre>
require_once('tcpdf/tcpdf.php');
require_once('pdf_gantt.php');

$pdf = new TCPDF('P','mm','A4');
$pdf-&gt;SetFont('', '', 8); # Your default font name,style,size here !
$pdf-&gt;setPrintHeader(false);
$pdf-&gt;setPrintFooter(false);

$pdf-&gt;AddPage();

$gantt_cfg = array(
    ,'dateformat'=&gt;'j Y'
    ,'descr_width'=&gt;0.30
    ,'bgcolor'=&gt;'#eee'
    ,'arrow_color'=&gt;'#25e'
    ,'grid_color'=&gt;'#cce'
    ,'shade_color'=&gt;'#bbb'
);

$gantt = new PdfGantt($pdf, $gantt_cfg,10,10,190,80);

$ganttdata = array(
   'title' =&gt; 'Project Dream Application'
  ,'daterange'=&gt;array('2013-01-01')
  ,'items' =&gt; array(
        array('id'=&gt;'task00', 'description'=&gt;'Publish on KickStarter', 'datestart'=&gt;'2013-01-01', 'workdays'=&gt;14
          ,'members'=&gt;'Andriano,Mickele','progress'=&gt;0.30)
       ,array('id'=&gt;'task01', 'description'=&gt;'Planning Development process', 'datestart'=&gt;'2013-01-15'
           , 'workdays'=&gt;28,'members'=&gt;'Steve,Paul,Hanna')
       ,array('id'=&gt;'task03', 'description'=&gt;'Developing Application Core', 'datestart'=&gt;'2013-01-01', 'workdays'=&gt;59
           ,'progress'=&gt;0.20, 'members'=&gt;'Antonio,Paul,Barbara')
       ,array('id'=&gt;'task02', 'description'=&gt;'Developing Main UI', 'datestart'=&gt;'2013-01-01', 'workdays'=&gt;59
           , 'progress'=&gt;0.25, 'members'=&gt;array('John','Paul'))
       ,array('id'=&gt;'task04', 'description'=&gt;'Programming Plugins', 'datestart'=&gt;'2013-01-01'
         , 'workdays'=&gt;30, 'dependencies'=&gt;'task02,task03', 'members'=&gt;'Antonio,Paul,John', 'milestone'=&gt;'Stage 1')
       ,array('id'=&gt;'task05', 'description'=&gt;'Alpha Testing', 'workdays'=&gt;30, 'dependencies'=&gt;'task01,task02,task03,task04'
         , 'members'=&gt;'All team members','color'=&gt;'#aa0', 'mcolor'=&gt;'#e22')
       ,array('id'=&gt;'task06', 'description'=&gt;'Beta (open) Testing', 'workdays'=&gt;30, 'dependencies'=&gt;'task05')
       ,array('id'=&gt;'task07', 'description'=&gt;'Making Release Package', 'workdays'=&gt;14, 'datestart'=&gt;'2013-01-01'
         ,'dependencies'=&gt;'task06', 'members'=&gt;'Paul,Andriano',     'milestone'=&gt;'Releasing')
       ,array('id'=&gt;'task08', 'description'=&gt;'Publishing on Steam', 'workdays'=&gt;10, 'datestart'=&gt;'2013-01-01'
         ,'dependencies'=&gt;'task07', 'members'=&gt;'John,Mickele')
  )
);

$gantt-&gt;Render($ganttdata);

$pdf-&gt;Output('Gantt_standalone.pdf', 'I');
</pre>

Обратите внимание, всю подготовительную работу над объектом TCPDF надо выполнять самостоятельно (SetFont(), AddPage() перед вызовом Render(), и Output()
для финальной выдачи содержимого PDF документа.

<h5>Использование как плагина, подключаемого к модулю printform-pdf.php (PfPdf_Gantt)</h5>

Класс генерации PDF-форм <a href="http://www.phpclasses.org/package/7791" target="_blank">PrintFormPdf</a>
начиная с версии 1.1 позволяет подключать плагины, выводящие специфический контент в указанной прямоугольной области.
Для этого должен быть реализован класс, наследующий от PfPdfPlugin (абстрактный класс, объявленный в printform-pdf.php).

<br>
В файле pdf_gantt.php это класс PfPdf_Gantt.
Таким образом, если вы подключили в своем коде файл pdf_gantt.php после модуля printform-pdf.php, то полдела уже сделано.
<br>Остается добавить описание вывода графика в ваш XML файл настроек печати для CPrintFormPdf.

<br><br>
<pre>
// Образец заполнения XML файла настроек с плагином для вывода графика Ганта
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;printdef&gt;
  &lt;version modified="2012-04-28"&gt;1.0&lt;/version&gt;

  &lt;baseparameters&gt;
    &lt;margins left="0" top="0" right="0" bottom="0" /&gt;
    &lt;font name="arial" size="10" /&gt;
    &lt;page orientation="L" size="A4" units="mm" /&gt;

  &lt;/baseparameters&gt;
  &lt;pages&gt;
   &lt;page&gt;
    &lt;field name="policy_serno" posx="165" posy="17.0" /&gt;
    &lt;field name="policydate" posx="210" posy="17.0" /&gt;
    &lt;field name="insurance_period" posx="184" posy="21.0" /&gt;

    &lt;field name="drv_no" posx="15" /&gt;
    &lt;field name="drv_name" posx="23" width="85" size="9"/&gt;
    &lt;field name="drv_birth" posx="120" /&gt;
    &lt;field name="drv_sex" posx="145" /&gt;
    &lt;field name="drv_license" posx="160" /&gt;
    &lt;field name="drv_exp" posx="194" /&gt;
    &lt;field name="drv_scases" posx="228" width="10" align="C" /&gt;
    &lt;field name="drv_bmc" posx="268" width="10" align="C"/&gt;
    &lt;datagrid name="drv_list" fields="drv_no,drv_name,drv_birth,drv_sex,drv_license,drv_exp,drv_scases,drv_bmc" posx="0" posy="50" step_y="4.6" rows="26" /&gt;

    &lt;field name="ispolnitel" posx="135.0" posy="200" /&gt;
    &lt;field name="b2bmark" posx="109" posy="189.5" size="8" /&gt;
    &lt;field name="barcode1" type="barcode:C128B" options="text,fontsize=7" posx="110" posy="193" align='c' height="7" width="80" /&gt;
<strong>
    &lt;plugin type="pfpdf_gantt" name="my_gantt1" posy="70" posx="10" height="70" width="0" bgcolor="#e8e8e8"
      options="dateformat=d.m,title_width=0.25,arrow_color=#F22,shade_color=#BBB" /&gt;
</strong>
    &lt;field name="draft_mark" posx="70" posy="45" size="40" rotate="20" color="gray"/&gt;
   &lt;/page&gt;
  &lt;/pages&gt;
&lt;/printdef&gt;
</pre>

Обратите внимание на тег <b>plugin</b>, находящийся среди описаний "полей" вывода.
С точки зрения печати через CPrintFormPdf это очередное поле, имеющее особый тип "plugin", "контент" в котором будет сформирован при помощи
соответствующего подключенного плагина, имя его класса плагина должно указывается в атрибуте <b>type</b>.
В нашем случае type="pfpdf_gantt" - имя плагин-класса, объявленного в файле pdf_gantt.php

<br><br>Как и к прочим выводимым полям, к выводу, выполняемому плагином, применимы атрибуты цвета фона и поворота, т.е. вы можете подложить под график
свой фон и/или повернуть его на нужный угол.

<br><br>
Передача данных о задачах, выводимых в график, производится при помощи метода setPluginData($name, $data).
Вызывать метод необходимо ДО вызова финального метода CPrintformPdf::Render().

<br><br>
Ниже пример кода из тестового файла gantt_sample1.php, выполняющего печать графика Ганта в составе модуля PrintformPdf:

<pre>
$pdf = new CPrintFormPdf( $options );
$pdf-&gt;LoadConfig('gantt-sample1.xml');
// ...
$pdf-&gt;AddData($data); // передаем "обычные" данные для вывода при помощи CPrintformPdf

$plgdata = array(
   'title' =&gt; 'Project &lt;&lt;Dream Application&gt;&gt;'
  ,'daterange'=&gt;array('2013-01-01','2013-12-31') # Общий выводимый диапазон дат на графике
  ,'items' =&gt; array(
        array('id'=&gt;'task00', 'description'=&gt;'Publish on KickStarter', 'datestart'=&gt;'2013-01-01', 'workdays'=&gt;14
          ,'members'=&gt;'Andriano,Mickele','progress'=&gt;0.30)
       ,array('id'=&gt;'task01', 'description'=&gt;'Planning Development process', 'datestart'=&gt;'2013-01-15', 'workdays'=&gt;28,'members'=&gt;'Steve,Paul,Hanna')
       ,array('id'=&gt;'task03', 'description'=&gt;'Developing Application Core', 'datestart'=&gt;'2013-01-01', 'workdays'=&gt;59,'progress'=&gt;0.20, 'members'=&gt;'Antonio,Paul,Barbara')
       ,array('id'=&gt;'task02', 'description'=&gt;'Developing Main UI', 'datestart'=&gt;'2013-01-01', 'workdays'=&gt;59, 'progress'=&gt;0.25, 'members'=&gt;array('John','Paul'))
       ,array('id'=&gt;'task04', 'description'=&gt;'Programming Plugins', 'datestart'=&gt;'2013-01-01', 'workdays'=&gt;30, 'dependencies'=&gt;'task02,task03')
// ...
);

$pdf-&gt;setPluginData('my_gantt1', $plgdata); // передаем данные о задачах/сотрудниках/вехах, для формирования гр.Ганта
$pdf-&gt;Render();
</pre>

Обратите внимание на значение первого параметра у метода <b>setPluginData</b>(), <b>my_gantt1</b>, это имя нашего "Plugin-поля"
(значение атрибута <b>name</b> в теге <b>plugin</b>).
<br>
Т.к. на форме допустим вывод нескольких графов Ганта (или других областей, рисуемых подключенными плагинами), очевидно, у каждого из них
должно быть уникальное символьно-числовое имя, чтобы однозначно ассигновать массив данных.

<h4>Описание методов класса PdfGantt</h4>

<b>__construct($tcpdfobj, $cfg = null, $x=0,$y=0,$w=0,$h=0)</b> - конструктор класса. Параметры:
<br><br>
<b>$tcpdfobj</b> - ранее созданный экземпляр класса TCPDF, через который будут выполняться все функции вывода в PDF документ.<br>

<br><br>$cfg - предполагается ассоциативный массив 'ключ' =&gt; значение, список поддерживаемых ключей (параметров настройки для вывода графика Ганта)
описан <a href="#cfg_list">ниже</a>).
Если переданное значение не является массивом, оно игнорируется.
<br><br>$x, $y - координаты левого верхнего угла области вывода графика, $w и $h - соответственно, ее ширина и высота.
<br>При нулевой ширине под график отводится вся доступная область страницы от указанной x-координаты, за вычетом небольшого 5-мм поля.
Аналогично рассчитывается высота области графика при переданном нулевом значении высоты $h.

<br><br>
<a name="cfg_list" id="cfg_list"></a>Список поддерживаемых параметров настройки для вывода графика Ганта :
<br><br>
<table>
 <tr><th>Имя параметра</th><th>Описание</th><th>По умолчанию</th>
 </tr>
 <tr>
   <td>stringcharset</td>
   <td>Кодировка, в которой будут названия (описания) задач, участвующих в них сотрудниках, вех (milestone) и т.д.
   Необходимо указывать для корректной конвертации строк в UTF-8 перед непосредственным выводом.
   В случае работы как плагин к CprintformPdf здесь передается аналогичный параметр, заданный для головного модуля (CprintformPdf), таким образом
   указание кодировки вдостаточно выполнить один раз (например, через настроечный XML файл к CprintformPdf)
   </td>
   <td>UTF-8
   </td>
 </tr>

 <tr>
  <td>dateformat</td>
  <td>Формат даты для вывода первых чисел (названий) месяцев над графиком Ганта (узлы сетки). Формат - строка в стандарте PHP функции date()</td>
  <td>'M Y', т.е. выводятся строки типа "Jan 2013", "Feb 2013" и т.д.</td>
 </tr>

 <tr>
  <td>dateformat2</td>
  <td>Формат для вывода даты начала задач (над столбиком самой задачи на графике), также строка в стандарте PHP функции date()</td>
  <td>'m/j' ("01/1", "01/24" и т.д.)</td>
 </tr>

 <tr>
  <td>descr_width</td>
  <td>Ширина левой колонки, для вывода названий(описаний) задач и списков работающих над ними людей. Может быть указана в долях единицы , тогда от общей ширины области под график
  берется соответствующая доля. Если же указано число больше 1, оно интерпретируется как точная длина в миллиметрах.
  Чтобы вообще не выводить колонку с названиями задач, укажите нулевое значение
  (например, это может быть логично при выводе второй и далее частей графика - "панорамы", где названия нужны только у первой части)
  </td>
  <td>0.2 (20 процентов от общей ширины области вывода графика)</td>
 </tr>

 <tr>
  <td>bgcolor</td>
  <td>задает цвет фона под графиком. Для этого и всех последующих цветовых значений допустимы любые строки, поддерживаемые классом TCPDF ('blue','#F0F0EE','#DDD').
  </td>
  <td>'' (пустая строка, фон не выводится)</td>
 </tr>

 <tr>
  <td>grid_color</td>
  <td>задает цвет линий сетки (вертикальные линии для первых дней месяца, горизонтальные - между задачами). Этим же цветом рисуются вертикали от задач к значкам "вех" (milestone)
  </td>
  <td>'#888'</td>
 </tr>

 <tr>
  <td>box_bgcolor</td>
  <td>задает основной цвет заливки "отрезков", показывающих задачу на временной линии.
  </td>
  <td>'#88e'</td>
 </tr>

 <tr>
  <td>box_bgcolor2</td>
  <td>задает дополнительный цвет, применяемый для заливки "неисполненной" части задачи. Используется, если в описании задачи есть параметр 'progress' (значение от 0 до 1)
  </td>
  <td>'#ccf'</td>
 </tr>

 <tr>
  <td>ms_color</td>
  <td>задает цвет заливки значков "вех"
  </td>
  <td>'#4ff'</td>
 </tr>

 <tr>
  <td>box_border</td>
  <td>задает цвет окантовки вокруг значков задач и вех.
  </td>
  <td>'#111'</td>
 </tr>

 <tr>
  <td>text_color</td>
  <td>задает общий цвет для всех текстов на графике.
  </td>
  <td>'#000'</td>
 </tr>

 <tr>
  <td>arrow_color</td>
  <td>задает цвет стрелок-указателей, показывающих зависимости между задачами (ведет от "родительских" задач к зависящим от них).
  </td>
  <td>'#777'</td>
 </tr>

 <tr>
  <td>dates_fontsize</td>
  <td>задает размер шрифта для вывода дат
  </td>
  <td>6</td>
 </tr>

 <tr>
  <td>taskdescr_fontsize</td>
  <td>задает размер шрифта в наименованиях задач (левая колонка графика)
  </td>
  <td>7</td>
 </tr>

 <tr>
  <td>members_fontsize</td>
  <td>задает размер шрифта для вывода списка людей, работающих над задачей. Рекомендуется маленький размер, иначе при большом количестве людей
  или недостаточной заданной высоте графика список членов команды может стать частично или полностью невидимым
  ( во избежание наползания на следующую строку делается авто-скрытие неумещающихся строк). TCPDF может автоматически изменить размер этого шрифта,
  чтобы текст уместился в отведенной области.
  </td>
  <td>5.5</td>
 </tr>

 <tr>
  <td>ms_fontsize</td>
  <td>задает размер шрифта для вывода наименований вех.
  </td>
  <td>6</td>
 </tr>

 <tr>
  <td>shade_color</td>
  <td>непустое значение включает вывод "тени" под прямоугольниками задач, и задает ее цвет.
  </td>
  <td>'' (пустая строка - тени не формируются)</td>
 </tr>

 <tr>
  <td>shade_offsetx</td>
  <td>горизонтальное смещение тени от ее "источника"
  </td>
  <td>1 (мм)</td>
 </tr>

 <tr>
  <td>shade_offsety</td>
  <td>вертикальное смещение тени от ее "источника"
  </td>
  <td>0.7 (мм)</td>
 </tr>

 <tr>
  <td>show_taskdays</td>
  <td>параметр, указывающий, выводить ли над задачей количество дней, отведенных на ее выполнение. Чтобы отключить вывод, укажите ноль.
  </td>
  <td>1 (выводить)</td>
 </tr>

 <tr>
  <td>ms_height</td>
  <td>"Milestone height", высота области, выделяемой на графике для вывода "вех". Эта область автоматически создается, уменьшая полезную высоту собственно графика,
   только в случае, если хотя бы у одной задачи есть непустой атрибут 'milestone'. Высота задается либо в долях единицы (и тогда рассчитывается от общей высоты области
   графика), либо в абсолютных величинах - текущих юнитах (mm) (если указать значение больше 1).
  </td>
  <td>0.08</td>
 </tr>

</table>

<br><br>

<b>Render($data)</b> - осуществляет печать графика Ганта на основании переданных данных о задачах и границах выводимого диапазона времени.

<br><br>$data - ассоциативный массив, включающий следующие элементы:
<br><br>
<table>
  <tr>
    <td>daterange</td>
    <td>массив (один или два элемента) либо строка с разделенными запятой значениями: дата_начала и дата_конца выводимого диапазона (начало и конец таймлайна).
    Даты должны передаваться в строке в формате 'YYYY-MM-DD'. Если даты не заданы вообще или не задана дата конца диапазона, они определяются автоматически
    из списка задач и их дат начала-конца, так чтобы все задачи целиком попали на таймлайн. Если при этом вычисленная дата начала диапазона -
    не первое число месяца, график все равно будет построен от начала месяца.
    <br>
    Пример:  $data['daterange'] = array('2013-01-01','2013-12-31')
    </td>
  </tr>
  <tr>
    <td>items</td>
    <td>Массив со списком задач,их сроков, исполнителей. Каждый элемент массива должен быть ассоциативным массивом со следующими элементами:
      <ul>
        <li>'<b>id</b>' - (обязательное) уникальное имя (идентификатор) задачи. Отношения между "главными" и зависящими от них задачами задаются ссылками на эти имена.
        <br>Отсутствие элемента id или его пустое значение не допускается (такая "задача" будет игнорирована)</li>
        <li>'<b>description</b>' - (необязательное) описание задачи. Выводится в левую колонку графика. При пустом значении используется имя (id) задачи</li>
        <li>'<b>color</b>' - (необязательное) цвет шрифта, которым выводить название данной задачи.
        Цвет используется вместо "стандартного", указанного в параметре конфигурации 'text_color'</li>
        <li>'<b>members</b>' - (необязательное) список имен людей, участвующих в задаче. Может быть одной строкой(имена разделенные запятой) или простым массивом строк-имен</li>
        <li>'<b>mcolor</b>' - (необязательное) цвет шрифта, которым выводить список работающих над задачей</li>
        <li>'<b>datestart</b>' - (необязательное) дата начала работы над задачей, строка в формате 'YYYY-DD-MM'</li>
        <li>'<b>dateend</b>' - (необязательное) дата окончания (последнего дня) работы над задачей, 'YYYY-DD-MM'</li>
        <li>'<b>workdays</b>' - (необязательное) количество дней, отводимых на задачу (целое число)</li>
        <li>'<b>progress</b>' - (необязательное) степень текущего исполнения задачи, задается в долях от единицы (т.е. 0.1 означает "выполнена на 10 %)
        <br>Если элемента нет или он равен единице, задача на таймлайне полностью закрашивается "базовым" цветом (box_bgcolor), при значении ниже 1.0
        на задаче рисуется столбик "прогресса" </li>
        <li>'<b>dependencies</b>' - (необязательное) список имен (id) задач, от которых зависит данная задача (не может стартовать, пока хоть одна из них не выполнена)
        <br>Допустимо пепедавать массив или строку (список имен, разделенных запятыми)</li>
        <li>'<b>milestone</b>' - (необязательное) название вехи, которая стартует вместе с данной задачей</li>
      </ul>
    </td>
  </tr>
</table>

В каждой задаче, для возможности определения дат ее начала и окончания должны быть либо явно указаны собственно обе даты,
либо дата начала и количество дней (workdays), либо только количество дней, но при этом задача должна быть зависимой от других задач (у которых даты
действия также заданы или могут однозначно вычислены по родительским задачам).

<br><br>
Зависимость можно указывать только от задач, уже присутствующих в списке, иначе печать графика будет неверной.
В процессе генерации графика даты начала (и соответственно окончания) зависящих задач при необходимости автоматически
перерасчитываются и сдвигаются вправо: даже если для такой задачи явно указана конкретная дата старта,
но одна или более "родительских" задач заканчивается позже, то дата сдвигается за самую позднюю из них.

<br><br>
При наличии хотя бы у одной из задач элемента 'milestone', на графике вверху выводится дополнительная линейка, для отображения вех и их названий.

<br><br>
<b>localize($param)</b> - вызывается для локализации, заменяет "стандартные" строки заголовков на пользовательские.
<br>$param должен быть ассоциативным массивом пользовательских строк, со следующими ключами:
<table>
  <tr>
    <td>days</td>
    <td>Строка для блока "число дней", выводимого в каждой задаче. "%s" в ней будет заменено на текущее кол-во дней у задачи.</td>
  </tr>
  <tr>
    <td>milestones</td>
    <td>Строка заголовка "Milestones"</td>
  </tr>
</table>

<br><br>
<b>setAreaPosition($x, $y, $w=0, $h=0)</b> задает координаты и размер области под график. Можно использовать, например, если эти параметры не были переданы
в конструкторе класса PdfGantt.

<br><br>
<b>setConfig($cfg)</b> явно передает новые (дополнительные) значения параметров конфигурации. Можно использовать, например, если параметры не были переданы
в конструкторе класса PdfGantt.

<h4>Вывод части графика</h4>

Возможны ситуации, когда при большом количестве задач в проекте, их большой общей протяженности по времени, невозможно будет вместить их все в один
единственный график. В этом случае можно воспользоваться выводом "по частям", с тем чтобы потом соединить части в единый график (как делают в панорамной фото-съемке).
<br><br>
Для этого достаточно многократно вывести один и тот же набор данных, каждый раз явно задавая в элементе 'daterange' нужные интервалы
времени. Логичным шагом будет на всех страницах кроме первой отключить вывод столбца с названиями задач, для чего указать нулевой размер параметра
'<b>descr_width</b>'.
<pre>// пример вывода графика по частям на две страницы

$pdf = new TCPDF('P','mm','A4');
$pdf-&gt;SetFont('', '', 8);
$pdf-&gt;setPrintHeader(false);
$pdf-&gt;setPrintFooter(false);

$pdf-&gt;AddPage();

$gantt_cfg = array(
    'descr_width'=&gt;0.30
    // ...
);

$gantt = new PdfGantt($pdf, $gantt_cfg,10,10,190,80);

$ganttdata = array(
   'title' =&gt; 'Project Dream Application'
  ,'daterange'=&gt;array('2013-01-01','2013-05-31')
  ,'items' =&gt; array(
  // ...
  )
);

$gantt-&gt;Render($ganttdata); // вывели первую часть

$gantt_cfg['descr_width'] = 0; // отключить вывод колонки с названиями задач
$ganttdata['daterange'] = array('2013-06-01','2013-12-31'); // вторая часть даипазона

$pdf-&gt;AddPage(); // новая страница
$gantt-&gt;setConfig($gantt_cfg);
$gantt-&gt;Render($ganttdata); // вывели первую часть
$pdf-&gt;Output('Gantt_standalone.pdf', 'I');
</pre>

<br><br>
Данный класс можно использовать как образец или стартовую точку для создания собственных плагинов к printform-pdf.php.
Правила их написания есть в в соответствующей документации к классу CPrintFormPdf.


<div style="text-align:right">Распространяется по лицензии: BSD License</div>

<h4>История версий (Change log)</h4>

<h5>0.90.0018 (26.04.2013)</h5>
<ul>
  <li>Первая публикация</li>
</ul>

<!-- DOC END -->
<br />
<hr>
<div align=center><font size=-2>Copyright &copy; Alexander Selifonov, <a href="http://www.selifan.ru">www.selifan.ru</a>
</font></div>
</body></html>
